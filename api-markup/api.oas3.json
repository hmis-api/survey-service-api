{
  "openapi": "3.0.0",
  "info": {
    "title": "Survey Service",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://www.hmislynk.com/survey-api/rest"
    }
  ],
  "paths": {
    "/clients/{clientid}/surveys/{surveyid}/responses": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "responses": {
                    "pagination": {
                      "from": 0,
                      "returned": 16,
                      "total": 16,
                      "maximum": 30,
                      "sort": {}
                    },
                    "responses": [
                      {
                        "responseId": "a4a8baf6-363a-4be8-8610-2cdb6593316f",
                        "responseText": "csacsc",
                        "questionScore": 123456,
                        "effectiveDate": "10-02-2017 03:12:00.000",
                        "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                      },
                      {
                        "responseId": "d510e6a2-fb02-4fd9-9057-2457f2bfefdf",
                        "responseText": "csacsc",
                        "questionScore": 123456,
                        "effectiveDate": "10-02-2017 03:12:00.000",
                        "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                      },
                      {
                        "responseId": "5f7f28b0-ed97-4571-a4bb-480d673e8bca",
                        "responseText": "csacsc",
                        "effectiveDate": "10-02-2017 03:12:00.000",
                        "questionScore": 123456,
                        "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                      },
                      {
                        "responseId": "32358e66-f123-4826-99db-5de5a9459227",
                        "responseText": "csacsc",
                        "effectiveDate": "10-02-2017 03:12:00.000",
                        "questionScore": 123456,
                        "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                      },
                      {
                        "responseId": "c0d0188d-bb7b-410c-b69e-da3ee66e5fd2",
                        "responseText": "csacsc",
                        "effectiveDate": "10-02-2017 03:12:00.000",
                        "questionScore": 123456,
                        "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_ids_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "500 – Internal Server Error"
          }
        },
        "description": "Searches for response.  Returns a list of response ids, based on the query parameters sent.  The query parameters are cumulative, so each additional query parameter narrows the search down further.",
        "operationId": "GET_clients-clientid-surveys-surveyid-responses"
      },
      "post": {
        "responses": {
          "201": {
            "description": "OK - New resource has been created.",
            "content": {
              "application/json": {
                "example": {
                  "response": {
                    "responseId": "a4a8baf6-363a-4be8-8610-2cdb6593316f",
                    "questionScore": 123456,
                    "submissionId": "a4a8baf6-363a-4be8-8610-2cdb6593316f"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/id_response_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "422": {
            "description": "Unprocessable Entity - Request body is incorrect."
          },
          "500": {
            "description": "500 – Internal Server Error."
          }
        },
        "description": "Add a response\n",
        "operationId": "POST_clients-clientid-surveys-surveyid-responses",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "responses": {
                  "responses": [
                    {
                      "questionId": "a4a8baf6-363a-4be8-8610-2cdb6593316f",
                      "responseText": "example response",
                      "sectionId": "b5b8cdg8-363a-4be8-8610-2cdb6593316f",
                      "appId": "app1",
                      "effectiveDate": "10-02-2017 03:12:00.000"
                    },
                    {
                      "questionId": "b5b8cdg8-363a-4be8-8610-2cdb6593316f",
                      "responseText": "example response",
                      "sectionId": "a4a8baf6-363a-4be8-8610-2cdb6593316f",
                      "appId": "app2",
                      "effectiveDate": "10-02-2017 03:12:00.000"
                    }
                  ]
                }
              },
              "schema": {
                "$ref": "#/components/schemas/response_json"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/clients/{clientid}/surveys/{surveyid}/responses/{responseid}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "response": {
                    "responseId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa",
                    "responseText": "csacsc",
                    "questionScore": 123456,
                    "effectiveDate": "10-02-2017 03:12:00.000",
                    "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_id_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires an user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Gets a response using a URI resource parameter/ID.",
        "operationId": "GET_clients-clientid-surveys-surveyid-responses-responseid"
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK – Everything is working."
          },
          "304": {
            "description": "Not Modified – The client can use cached data."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires a user."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Updates a specific response specified by the URI resource parameter/ID.",
        "operationId": "PUT_clients-clientid-surveys-surveyid-responses-responseid",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "response": {
                  "responseId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa",
                  "responseText": "csacsc",
                  "questionScore": 123456,
                  "effectiveDate": "10-02-2017 03:12:00.000",
                  "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/response_id_json"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "OK – The resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Deletes a specific response specified by the URI resource parameter/ID.",
        "operationId": "DELETE_clients-clientid-surveys-surveyid-responses-responseid"
      },
      "parameters": [
        {
          "name": "responseid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Response Identifier"
        },
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/clients/{clientid}/surveys/{surveyid}/sections/{sectionid}/scores": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "sectionScore": {
                    "sectionScoreId": "05aac4fd-77ab-4079-9998-ea3d461a6b1c",
                    "sectionId": "b004dd1e-e110-4780-a474-38876b5ab601",
                    "surveyId": "fd83e44a-3e8c-4ff0-bcb9-8ea4403d79ab",
                    "clientId": "91dbc8c3-6df6-4702-9733-c84dd67bf1ed",
                    "sectionScore": 10
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/section_score"
                }
              }
            }
          }
        },
        "description": "To insert sctore for a section",
        "operationId": "POST_clients-clientid-surveys-surveyid-sections-sectionid-scores",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "sectionScore": {
                  "sectionScore": 30
                }
              },
              "schema": {
                "required": [
                  "sectionScore"
                ],
                "type": "object",
                "properties": {
                  "sectionScore": {
                    "required": [
                      "sectionScore"
                    ],
                    "type": "object",
                    "properties": {
                      "sectionScore": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "sectionScore": {
                    "sectionScoreId": "05aac4fd-77ab-4079-9998-ea3d461a6b1c",
                    "sectionId": "b004dd1e-e110-4780-a474-38876b5ab601",
                    "surveyId": "fd83e44a-3e8c-4ff0-bcb9-8ea4403d79ab",
                    "clientId": "91dbc8c3-6df6-4702-9733-c84dd67bf1ed",
                    "sectionScore": 10
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/section_score"
                }
              }
            }
          }
        },
        "description": "Read a section score.",
        "operationId": "GET_clients-clientid-surveys-surveyid-sections-sectionid-scores"
      },
      "put": {
        "responses": {
          "default": {
            "description": ""
          }
        },
        "description": "Recalcute the score specified section",
        "operationId": "PUT_clients-clientid-surveys-surveyid-sections-sectionid-scores"
      },
      "delete": {
        "responses": {
          "default": {
            "description": ""
          }
        },
        "description": "Delete score of a specfied section",
        "operationId": "DELETE_clients-clientid-surveys-surveyid-sections-sectionid-scores"
      },
      "parameters": [
        {
          "name": "sectionid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/clients/{clientid}/surveys/{surveyid}/scores": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "sectionScores": {
                    "pagination": {
                      "from": 0,
                      "returned": 1,
                      "total": 1,
                      "maximum": 30,
                      "sort": {}
                    },
                    "sectionScores": [
                      {
                        "sectionScoreId": "05aac4fd-77ab-4079-9998-ea3d461a6b1c",
                        "sectionId": "b004dd1e-e110-4780-a474-38876b5ab601",
                        "surveyId": "fd83e44a-3e8c-4ff0-bcb9-8ea4403d79ab",
                        "clientId": "91dbc8c3-6df6-4702-9733-c84dd67bf1ed",
                        "sectionScore": 10
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/score_ids_json"
                }
              }
            }
          }
        },
        "description": "Read a section score.",
        "operationId": "GET_clients-clientid-surveys-surveyid-scores"
      },
      "put": {
        "responses": {
          "default": {
            "description": ""
          }
        },
        "description": "Recalcute the score specified section",
        "operationId": "PUT_clients-clientid-surveys-surveyid-scores"
      },
      "delete": {
        "responses": {
          "default": {
            "description": ""
          }
        },
        "description": "Delete score of a specfied section",
        "operationId": "DELETE_clients-clientid-surveys-surveyid-scores"
      },
      "parameters": [
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/clients/{clientid}/surveys/{surveyid}/submissions": {
      "put": {
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "errors": [
                      {
                        "code": "SUBMISSION_DETAILS_NOT_FOUND",
                        "message": "Submission Details not found : e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "To update responses data of submission\n",
        "operationId": "PUT_clients-clientid-surveys-surveyid-submissions",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "responses": {
                  "responses": [
                    {
                      "questionId": "a4a8baf6-363a-4be8-8610-2cdb6593316f",
                      "responseText": "example response",
                      "sectionId": "b5b8cdg8-363a-4be8-8610-2cdb6593316f",
                      "appId": "app1",
                      "effectiveDate": "10-02-2017 03:12:00.000"
                    },
                    {
                      "questionId": "b5b8cdg8-363a-4be8-8610-2cdb6593316f",
                      "responseText": "example response",
                      "sectionId": "a4a8baf6-363a-4be8-8610-2cdb6593316f",
                      "appId": "app2",
                      "effectiveDate": "10-02-2017 03:12:00.000"
                    }
                  ]
                }
              },
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "responses": {
                      "pagination": {
                        "from": 0,
                        "returned": 16,
                        "total": 16,
                        "maximum": 30,
                        "sort": {}
                      },
                      "responses": [
                        {
                          "responseId": "a4a8baf6-363a-4be8-8610-2cdb6593316f",
                          "responseText": "csacsc",
                          "questionScore": 123456,
                          "effectiveDate": "10-02-2017 03:12:00.000",
                          "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                        },
                        {
                          "responseId": "d510e6a2-fb02-4fd9-9057-2457f2bfefdf",
                          "responseText": "csacsc",
                          "questionScore": 123456,
                          "effectiveDate": "10-02-2017 03:12:00.000",
                          "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                        },
                        {
                          "responseId": "5f7f28b0-ed97-4571-a4bb-480d673e8bca",
                          "responseText": "csacsc",
                          "effectiveDate": "10-02-2017 03:12:00.000",
                          "questionScore": 123456,
                          "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                        },
                        {
                          "responseId": "32358e66-f123-4826-99db-5de5a9459227",
                          "responseText": "csacsc",
                          "effectiveDate": "10-02-2017 03:12:00.000",
                          "questionScore": 123456,
                          "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                        },
                        {
                          "responseId": "c0d0188d-bb7b-410c-b69e-da3ee66e5fd2",
                          "responseText": "csacsc",
                          "effectiveDate": "10-02-2017 03:12:00.000",
                          "questionScore": 123456,
                          "submissionId": "e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "errors": [
                      {
                        "code": "SUBMISSION_DETAILS_NOT_FOUND",
                        "message": "Submission Details not found : e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "To get responses of a submission.\n",
        "operationId": "GET_clients-clientid-surveys-surveyid-submissions"
      },
      "delete": {
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "errors": [
                      {
                        "code": "SUBMISSION_DETAILS_NOT_FOUND",
                        "message": "Submission Details not found : e9a4a447-833f-4c29-a3b6-f966a0a753aa"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "To get responses of a submission.\n",
        "operationId": "DELETE_clients-clientid-surveys-surveyid-submissions"
      },
      "parameters": [
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/clients/{clientid}/surveys/{surveyid}/submissions/{submissionid}": {
      "parameters": [
        {
          "name": "submissionid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/picklistgroups": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "pickListGroups": {
                    "pagination": {
                      "from": 0,
                      "returned": 20,
                      "total": 20,
                      "maximum": 30,
                      "sort": {}
                    },
                    "pickListGroups": [
                      {
                        "pickListGroupId": "f2ef5e72-5549-4dc8-8885-8f11c284d7e9",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "748decb7-fc9c-4cf2-82fe-2859c5f9c597",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "7283aa39-697c-4014-8008-99e9e725627d",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "4d650943-99c5-482a-83b4-ef2555eef9c1",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "e7c187a0-05f1-4c04-9b66-77e74ccca455",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "abe13cea-cd23-4a81-8fd6-087e24051078",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "195077eb-3d37-470e-871a-c67cd3a1a82b",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "7592b9f1-9a39-4dda-b49a-f99e721f2c7b",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "5db04855-30a2-4a69-aee0-0616a52b2274",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "1893af91-85fe-48ce-befe-469186cd6d40",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "ba029bdc-db36-4e46-a261-87cc1131028d",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "948867d0-b77c-432e-9ecb-ac7b71070491",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "7c304ec4-3fcd-4f69-bcf4-7126e61027ac",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "fc7c687b-de0b-47ff-9d3e-63f3920fb4b5",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "885a21f0-7bfb-46e8-ada9-4bd82d03af4c",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "5c361bf4-395e-46a1-abaa-e3f5d96d2c1c",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "3a8f2567-3d4c-4719-8503-5a15bafe55a6",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "2d60e8e0-a1da-4ad7-af33-126cd5dfdbac",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "edf422e3-8118-41cb-8b00-f34f2a2d9085",
                        "pickListGroupName": "TestName"
                      },
                      {
                        "pickListGroupId": "45852728-1543-4294-8d69-0e7e252a7932",
                        "pickListGroupName": "TestName"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pickListGroup_ids_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "500 – Internal Server Error"
          }
        },
        "description": "Searches for picklistgroup.  Returns a list of picklistgroup ids, based on the query parameters sent.  The query parameters are cumulative, so each additional query parameter narrows the search down further.",
        "operationId": "GET_picklistgroups"
      },
      "post": {
        "responses": {
          "201": {
            "description": "OK - New resource has been created.",
            "content": {
              "application/json": {
                "example": {
                  "pickListGroup": {
                    "pickListGroupId": "45852728-1543-4294-8d69-0e7e252a7932"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/id_pickListGroup_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "422": {
            "description": "Unprocessable Entity - Request body is incorrect."
          },
          "500": {
            "description": "500 – Internal Server Error."
          }
        },
        "description": "Add a picklistgroup\n",
        "operationId": "POST_picklistgroups",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "pickListGroup": {
                  "pickListGroupName": "TestName"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/pickListGroup_json"
              }
            }
          },
          "required": true
        }
      }
    },
    "/picklistgroups/{picklistgroupid}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "pickListGroup": {
                    "pickListGroupId": "66a0181b-26d7-4335-807e-04b73e196d86",
                    "pickListGroupName": "TestName"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pickListGroup_id_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires an user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Gets a picklistgroup using a URI resource parameter/ID.",
        "operationId": "GET_picklistgroups-picklistgroupid"
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK – Everything is working."
          },
          "304": {
            "description": "Not Modified – The client can use cached data."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires a user."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Updates a specific picklistgroup specified by the URI resource parameter/ID.",
        "operationId": "PUT_picklistgroups-picklistgroupid",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "pickListGroup": {
                  "pickListGroupName": "TestName"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/pickListGroup_json"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "OK – The resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Deletes a specific picklistgroup specified by the URI resource parameter/ID.",
        "operationId": "DELETE_picklistgroups-picklistgroupid"
      },
      "parameters": [
        {
          "name": "picklistgroupid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "PickListGroup Identifier"
        }
      ]
    },
    "/picklistgroup/{picklistgroupid}/picklistvalues": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "pickListValues": {
                    "pagination": {
                      "from": 0,
                      "returned": 16,
                      "total": 16,
                      "maximum": 30,
                      "sort": {}
                    },
                    "pickListValues": [
                      {
                        "pickListValueId": "eff61efc-edcf-44d1-989b-452463d17db2",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "7b620bb1-007c-494a-aa3a-a5ff249f94d5",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "ef93bedd-5cae-4c99-b1da-34fb2580e859",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "d7197e96-d932-4844-8304-911d3ddc238c",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "27c89fc5-549b-4111-926c-adbf9106f321",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "26d7ee8a-a604-432f-ad5b-87cf4fae9513",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "9b1706c5-1f32-40d9-9c72-1c0e1e8562a4",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "fbf262e2-e725-4dfd-bb6e-3c93aef88096",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "c9eadcd0-c54f-40ec-8f84-f1f055569a22",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "dc8d37ea-c178-4d79-a2b2-b16dbf51b627",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "81744500-3404-4865-b91e-7629cc680afa",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "1f4a043c-5ec6-4e88-8a32-c46bb6093454",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "9caa01cf-7a8c-466b-a0f0-81691c33ded6",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "142cec7f-3714-4e6e-b047-87415130ec8f",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "580007eb-0f50-490a-85bb-a0204bcb077c",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      },
                      {
                        "pickListValueId": "2c668282-5130-4f91-89e6-9a020f638919",
                        "pickListValueCode": "TestCode",
                        "valueText": "Test"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pickListValues_ids_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "500 – Internal Server Error"
          }
        },
        "description": "Searches for picklistvalue.  Returns a list of picklistvalue ids, based on the query parameters sent.  The query parameters are cumulative, so each additional query parameter narrows the search down further.",
        "operationId": "GET_picklistgroup-picklistgroupid-picklistvalues"
      },
      "post": {
        "responses": {
          "201": {
            "description": "OK - New resource has been created.",
            "content": {
              "application/json": {
                "example": {
                  "pickListValue": {
                    "pickListValueId": "eff61efc-edcf-44d1-989b-452463d17db2"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/id_pickListValues_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "422": {
            "description": "Unprocessable Entity - Request body is incorrect."
          },
          "500": {
            "description": "500 – Internal Server Error."
          }
        },
        "description": "Add a picklistvalue\n",
        "operationId": "POST_picklistgroup-picklistgroupid-picklistvalues",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "pickListValues": {
                  "pickListValues": [
                    {
                      "pickListValueCode": "TestCode",
                      "valueText": "Test"
                    },
                    {
                      "pickListValueCode": "TestCode",
                      "valueText": "Test"
                    },
                    {
                      "pickListValueCode": "TestCode",
                      "valueText": "Test"
                    }
                  ]
                }
              },
              "schema": {
                "$ref": "#/components/schemas/pickListValues_json"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "picklistgroupid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/picklistgroup/{picklistgroupid}/picklistvalues/{picklistvalueid}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "pickListValue": {
                    "pickListValueId": "4223e5cf-7f3e-46eb-aa36-5b2174ee62e9",
                    "pickListValueCode": "TestCode",
                    "valueText": "Test"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pickListValues_id_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires an user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Gets a picklistvalue using a URI resource parameter/ID.",
        "operationId": "GET_picklistgroup-picklistgroupid-picklistvalues-picklistvalueid"
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK – Everything is working."
          },
          "304": {
            "description": "Not Modified – The client can use cached data."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires a user."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Updates a specific picklistvalue specified by the URI resource parameter/ID.",
        "operationId": "PUT_picklistgroup-picklistgroupid-picklistvalues-picklistvalueid",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "pickListValues": {
                  "pickListValues": [
                    {
                      "pickListValueCode": "TestCode",
                      "valueText": "Test"
                    },
                    {
                      "pickListValueCode": "TestCode",
                      "valueText": "Test"
                    },
                    {
                      "pickListValueCode": "TestCode",
                      "valueText": "Test"
                    }
                  ]
                }
              },
              "schema": {
                "$ref": "#/components/schemas/pickListValues_json"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "OK – The resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Deletes a specific picklistvalue specified by the URI resource parameter/ID.",
        "operationId": "DELETE_picklistgroup-picklistgroupid-picklistvalues-picklistvalueid"
      },
      "parameters": [
        {
          "name": "picklistgroupid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "picklistvalueid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "PickListValues Identifier"
        }
      ]
    },
    "/questiongroups": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "questionGroups": {
                    "pagination": {
                      "from": 0,
                      "returned": 16,
                      "total": 16,
                      "maximum": 30,
                      "sort": {}
                    },
                    "questionGroups": [
                      {
                        "questionIGroupId": "2680ce52-9357-461a-9f66-7714390358bc",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "742e7ca8-4c97-4c2d-9438-3e872ed2571f",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "012135a7-8a21-4098-9cd9-568559d45e5a",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "9a6f734b-28f8-44ac-bc78-602afdf9e30b",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "538319a9-b5c8-42ac-8321-27aeade5559b",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "75709583-c0bd-4ab7-99a4-bbcd78ce6e5b",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "5a397928-11fa-4db3-acd5-3584658978ae",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "0b91396a-8697-4982-b357-2f2a67f63712",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "dd21ba01-7b63-42c2-9444-efc629035eab",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "7d5d7a6d-8f93-44f2-9058-4175b4d2e25c",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "b3319a4c-4613-44e3-8484-a66d9f911dee",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "d2ef7565-bd4a-4ec0-8b45-5f2fcded584c",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "1c111213-0069-4710-818e-a4972d2dadc2",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "5436c94d-0a56-445e-8b1f-439f723775ad",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "f939e05e-b5ca-418c-aaa3-cbf1528c3bac",
                        "questionGroupName": "jbsvjkbv"
                      },
                      {
                        "questionIGroupId": "cc6418c3-5b8f-4d68-83c4-938bea625912",
                        "questionGroupName": "jbsvjkbv"
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/questionGroup_ids_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "500 – Internal Server Error"
          }
        },
        "description": "Searches for questiongroup.  Returns a list of questiongroup ids, based on the query parameters sent.  The query parameters are cumulative, so each additional query parameter narrows the search down further.",
        "operationId": "GET_questiongroups"
      },
      "post": {
        "responses": {
          "201": {
            "description": "OK - New resource has been created.",
            "content": {
              "application/json": {
                "example": {
                  "questionGroup": {
                    "questionIGroupId": "cc6418c3-5b8f-4d68-83c4-938bea625912"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/id_questionGroups_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "422": {
            "description": "Unprocessable Entity - Request body is incorrect."
          },
          "500": {
            "description": "500 – Internal Server Error."
          }
        },
        "description": "Add a questiongroup\n",
        "operationId": "POST_questiongroups",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "questionGroup": {
                  "questionGroupName": "jbsvjkbv"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/questionGroups_json"
              }
            }
          },
          "required": true
        }
      }
    },
    "/questiongroups/{questiongroupid}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "questionGroup": {
                    "questionIGroupId": "de6de9cb-ee05-4eea-84b3-d368370b9180",
                    "questionGroupName": "jbsvjkbv"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/questionGroups_id_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires an user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Gets a questiongroup using a URI resource parameter/ID.",
        "operationId": "GET_questiongroups-questiongroupid"
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK – Everything is working."
          },
          "304": {
            "description": "Not Modified – The client can use cached data."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires a user."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Updates a specific questiongroup specified by the URI resource parameter/ID.",
        "operationId": "PUT_questiongroups-questiongroupid",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "questionGroup": {
                  "questionGroupName": "jbsvjkbv"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/questionGroups_json"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "OK – The resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Deletes a specific questiongroup specified by the URI resource parameter/ID.",
        "operationId": "DELETE_questiongroups-questiongroupid"
      },
      "parameters": [
        {
          "name": "questiongroupid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "QuestionGroups Identifier"
        }
      ]
    },
    "/questiongroups/{questiongroupid}/questions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "questions": {
                    "pagination": {
                      "from": 0,
                      "returned": 16,
                      "total": 16,
                      "maximum": 30,
                      "sort": {}
                    },
                    "questions": [
                      {
                        "questionId": "4bd3d3e1-a70a-4e66-89d9-43fd23f5f3c8",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345,
                        "pickListGroupId": "66a0181b-26d7-4335-807e-04b73e196d86"
                      },
                      {
                        "questionId": "aeaed6cd-dbe3-4b40-951a-85d7abf410d2",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "eb0266df-8a62-47da-af35-08fca477aa97",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "97342127-06b5-4455-b757-63961a523121",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "ab7a4b52-8818-415a-b0ce-3ee29c58e226",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "62988239-88ae-41ce-be55-65fc1732ef88",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "ffb54b34-a6dc-4fc3-9631-145b705daeaf",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "2b3c1941-be73-4fc6-b99f-5dd4382804aa",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "e5d0ac93-6070-4bf0-ae0c-3e21e3c6cd54",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "6432fb8b-ad4a-47b7-8927-b18eaa91f54c",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "f58d1b36-2208-4bee-a616-649291cf148e",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "cd65e411-194a-421b-a73e-f33b7f928085",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "2b62b56e-f8ad-40b5-beb8-a554e706544e",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "50169178-a7fb-4d28-b935-cea1399e2df2",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "029bd4a9-4035-4d7c-b661-bed328e8010f",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "f3e7f22d-c136-4128-8d88-9de3f1be9540",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/questions_ids_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "500 – Internal Server Error"
          }
        },
        "description": "Searches for <<resourcePathName|!singularize>>.  Returns a list of <<resourcePathName|!singularize>> ids, based on the query parameters sent.  The query parameters are cumulative, so each additional query parameter narrows the search down further.",
        "operationId": "GET_questiongroups-questiongroupid-questions"
      },
      "post": {
        "responses": {
          "201": {
            "description": "OK - New resource has been created.",
            "content": {
              "application/json": {
                "example": {
                  "question": {
                    "questionId": "f3e7f22d-c136-4128-8d88-9de3f1be9540",
                    "copyQuestionId": false,
                    "hudQuestion": false,
                    "locked": false,
                    "questionWeight": 0
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/id_questions_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "422": {
            "description": "Unprocessable Entity - Request body is incorrect."
          },
          "500": {
            "description": "500 – Internal Server Error."
          }
        },
        "description": "The following operators can be used for \"correctValueForAssessment\" field.\n 1) Relational operators – equal (==, eq), not equal (!=, ne), less than (<, lt), less than or equal (<= , le), greater than (>, gt), and greater than or equal (>=, ge).\n 2) Logical operators – and, or, and not (!).\n\n Question Data Type indicates the data type of the question and currently the following data types are allowed\n Allowed values for questionDataType : NUMBER , STRING , BOOLEAN\n\n Question Type indicates the type of UI control that is to be presented to the end us.\n Allowed values for questionType: TEXT, CHECKBOX, DROPDOWN , RADIOBUTTON\n For questions of type RADIOBUTTON , CHECKBOX and DROPDOWN pickListGroupId is required  (example: \"pickListGroupId\": \"37766271-7cb8-4c0b-9210-07dc7f82b871\")\n",
        "operationId": "POST_questiongroups-questiongroupid-questions",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "question": {
                  "questionDescription": "asvsvsav",
                  "displayText": "wefewf",
                  "questionDataType": "NUMBER",
                  "questionType": "CHECKBOX",
                  "correctValueForAssessment": "ergreg",
                  "copyQuestionId": true,
                  "hudQuestion": false,
                  "locked": false,
                  "questionWeight": 1345,
                  "pickListGroupId": "66a0181b-26d7-4335-807e-04b73e196d86"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/questions_json"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "questiongroupid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "QuestionGroups Identifier"
        }
      ]
    },
    "/questiongroups/{questiongroupid}/questions/{questionid}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "question": {
                    "questionId": "7c949e03-6bd0-402f-b35c-7a0f23e48863",
                    "questionDescription": "asvsvsav",
                    "displayText": "wefewf",
                    "questionDataType": "nhhhee",
                    "questionType": "sddvdv",
                    "correctValueForAssessment": "ergreg",
                    "copyQuestionId": true,
                    "hudQuestion": false,
                    "locked": false,
                    "questionWeight": 1345,
                    "pickListGroupId": "66a0181b-26d7-4335-807e-04b73e196d86"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/questions_id_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires an user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Gets a question using a URI resource parameter/ID.",
        "operationId": "GET_questiongroups-questiongroupid-questions-questionid"
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK – Everything is working."
          },
          "304": {
            "description": "Not Modified – The client can use cached data."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires a user."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Updates a specific question specified by the URI resource parameter/ID.",
        "operationId": "PUT_questiongroups-questiongroupid-questions-questionid",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "question": {
                  "questionDescription": "asvsvsav",
                  "displayText": "wefewf",
                  "questionDataType": "NUMBER",
                  "questionType": "CHECKBOX",
                  "correctValueForAssessment": "ergreg",
                  "copyQuestionId": true,
                  "hudQuestion": false,
                  "locked": false,
                  "questionWeight": 1345,
                  "pickListGroupId": "66a0181b-26d7-4335-807e-04b73e196d86"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/questions_json"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "OK – The resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Deletes a specific question specified by the URI resource parameter/ID.",
        "operationId": "DELETE_questiongroups-questiongroupid-questions-questionid"
      },
      "parameters": [
        {
          "name": "questionid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Questions Identifier"
        },
        {
          "name": "questiongroupid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "QuestionGroups Identifier"
        }
      ]
    },
    "/surveys": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "survies": {
                    "pagination": {
                      "from": 0,
                      "returned": 18,
                      "total": 18,
                      "maximum": 30,
                      "sort": {}
                    },
                    "survies": [
                      {
                        "surveyId": "bff91ee3-4e88-4953-8f67-e6c549fc2d01",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "296de921-fb63-45bc-8e14-e12c4b349991",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "6f63be9f-b54e-478c-aabe-f590fbf6328e",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "cf9a29db-af32-4265-be03-a78b63246ac1",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "bbbba978-a239-46a5-b128-ade2e997242e",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "fb2e21fe-9fcd-4c35-88d7-589e1356f6f9",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "4d2721e5-7a29-46ba-8208-7ea3d3dd336a",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "398c1711-b3b3-4160-9db6-7e6decdfc6e0",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "a4b4fb34-3d75-43d9-9afe-8a823ce63ce3",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "69cf6533-4442-4c6c-babe-a43f92213e73",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "3a142e1e-6bab-4125-bfce-62e57dddbbac",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "eb6d9177-2118-4592-b776-ea73d06f9484",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "89f06486-faf4-42ea-8bb0-8ea43e2cc029",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "fc02d5f2-0c71-40e1-aacc-14bbb8e1495b",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "f7b94dc1-c51e-4605-88bc-e5faf7d22b81",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "3d9d3276-8afd-4c8e-bc35-44a3dd6f0220",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "51cbb075-ba9a-4171-96b7-b69b934258a5",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      },
                      {
                        "surveyId": "fd628990-623a-42c6-8df2-f74a4c6d2c77",
                        "surveyTitle": "dsvnjkvjnds",
                        "surveyOwner": "asssa",
                        "tagValue": "vfvnjkj",
                        "locked": true,
                        "copySurveyId": false
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/surveys_ids_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "500 – Internal Server Error"
          }
        },
        "description": "Searches for survey.  Returns a list of survey ids, based on the query parameters sent.  The query parameters are cumulative, so each additional query parameter narrows the search down further.",
        "operationId": "GET_surveys"
      },
      "post": {
        "responses": {
          "201": {
            "description": "OK - New resource has been created.",
            "content": {
              "application/json": {
                "example": {
                  "survey": {
                    "surveyId": "fd628990-623a-42c6-8df2-f74a4c6d2c77",
                    "locked": false,
                    "copySurveyId": false
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/id_surveys_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "422": {
            "description": "Unprocessable Entity - Request body is incorrect."
          },
          "500": {
            "description": "500 – Internal Server Error."
          }
        },
        "description": "Add a survey\n",
        "operationId": "POST_surveys",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "survey": {
                  "surveyTitle": "dsvnjkvjnds",
                  "surveyOwner": "asssa",
                  "tagValue": "vfvnjkj",
                  "locked": true,
                  "copySurveyId": false
                }
              },
              "schema": {
                "$ref": "#/components/schemas/surveys_json"
              }
            }
          },
          "required": true
        }
      }
    },
    "/surveys/{surveyid}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "survey": {
                    "surveyId": "4ff874ec-88ef-46bb-93d6-66be064d5dd2",
                    "surveyTitle": "dsvnjkvjnds",
                    "surveyOwner": "asssa",
                    "tagValue": "vfvnjkj",
                    "locked": true,
                    "copySurveyId": false
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/surveys_id_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires an user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Gets a survey using a URI resource parameter/ID.",
        "operationId": "GET_surveys-surveyid"
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK – Everything is working."
          },
          "304": {
            "description": "Not Modified – The client can use cached data."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires a user."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Updates a specific survey specified by the URI resource parameter/ID.",
        "operationId": "PUT_surveys-surveyid",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "survey": {
                  "surveyTitle": "dsvnjkvjnds",
                  "surveyOwner": "asssa",
                  "tagValue": "vfvnjkj",
                  "locked": true,
                  "copySurveyId": false
                }
              },
              "schema": {
                "$ref": "#/components/schemas/surveys_json"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "OK – The resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Deletes a specific survey specified by the URI resource parameter/ID.",
        "operationId": "DELETE_surveys-surveyid"
      },
      "parameters": [
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Surveys Identifier"
        }
      ]
    },
    "/surveys/{surveyid}/surveysections": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "surveySections": {
                    "pagination": {
                      "from": 0,
                      "returned": 16,
                      "total": 16,
                      "maximum": 30,
                      "sort": {}
                    },
                    "surveySections": [
                      {
                        "surveySectionId": "4f0927b8-b5cb-4714-8f64-d417c07862d1",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "30f04be7-08d1-4c82-8c5f-0dc31f3e2f7d",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "dcdfc572-3707-46b4-9cca-a4b6b350c63f",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "b2ece237-72ad-4e8e-8cc2-718c9a87624e",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "0c004c59-aa3d-47f3-9f81-a7117b35d0f3",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "2ad79bbe-60a1-4b6c-84f9-09bb0cd77e95",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "120fbc29-7041-48b2-9ab3-6eade09047a6",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "06873599-4f8a-4d5c-8b8b-5fafe5633900",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "2142388d-5c71-4c95-b282-742d9a5ceffb",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "7ba5f57c-a0c5-4d7e-ba31-51dd93553d83",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "12f0ab32-440d-409a-a45b-58f8a43b2fee",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "517571e9-1161-4229-8702-b86587726700",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "d187c8bd-fe8e-4146-a9eb-65c08b93b8d5",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "9531e345-547c-482c-abfa-8831b9608ca5",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "688e9a94-a273-488c-8dde-5157df3103fc",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      },
                      {
                        "surveySectionId": "8213b48a-1504-4adf-a58f-2b557a1e2b9e",
                        "sectionText": "scdcddds",
                        "sectionDetail": "hsabbsac",
                        "sectionWeight": 12356,
                        "order": 123456
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/surveySection_ids_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "500 – Internal Server Error"
          }
        },
        "description": "Searches for surveysection.  Returns a list of surveysection ids, based on the query parameters sent.  The query parameters are cumulative, so each additional query parameter narrows the search down further.",
        "operationId": "GET_surveys-surveyid-surveysections"
      },
      "post": {
        "responses": {
          "201": {
            "description": "OK - New resource has been created.",
            "content": {
              "application/json": {
                "example": {
                  "surveySection": {
                    "surveySectionId": "8213b48a-1504-4adf-a58f-2b557a1e2b9e",
                    "sectionWeight": 0,
                    "order": 0
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/id_surveySection_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "422": {
            "description": "Unprocessable Entity - Request body is incorrect."
          },
          "500": {
            "description": "500 – Internal Server Error."
          }
        },
        "description": "Add a surveysection\n",
        "operationId": "POST_surveys-surveyid-surveysections",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "surveySection": {
                  "sectionText": "scdcddds",
                  "sectionDetail": "hsabbsac",
                  "sectionWeight": 12356,
                  "order": 123456
                }
              },
              "schema": {
                "$ref": "#/components/schemas/surveySections_json"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Surveys Identifier"
        }
      ]
    },
    "/surveys/{surveyid}/surveysections/{sectionid}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "surveySection": {
                    "surveySectionId": "6db77e4c-39d9-44e1-bcfc-139697ae69d1",
                    "sectionText": "scdcddds",
                    "sectionDetail": "hsabbsac",
                    "sectionWeight": 12356,
                    "order": 123456
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/surveySections_id_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires an user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Gets a surveysection using a URI resource parameter/ID.",
        "operationId": "GET_surveys-surveyid-surveysections-sectionid"
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK – Everything is working."
          },
          "304": {
            "description": "Not Modified – The client can use cached data."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires a user."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Updates a specific surveysection specified by the URI resource parameter/ID.",
        "operationId": "PUT_surveys-surveyid-surveysections-sectionid",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "surveySection": {
                  "sectionText": "scdcddds",
                  "sectionDetail": "hsabbsac",
                  "sectionWeight": 12356,
                  "order": 123456
                }
              },
              "schema": {
                "$ref": "#/components/schemas/surveySections_json"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "OK – The resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Deletes a specific surveysection specified by the URI resource parameter/ID.",
        "operationId": "DELETE_surveys-surveyid-surveysections-sectionid"
      },
      "parameters": [
        {
          "name": "sectionid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "SurveySections Identifier"
        },
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Surveys Identifier"
        }
      ]
    },
    "/surveys/{surveyid}/surveysections/{sectionid}/questions": {
      "post": {
        "responses": {
          "200": {
            "description": "Question added to survey"
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "422": {
            "description": "Unprocessable Entity - Request body is incorrect."
          },
          "500": {
            "description": "500 – Internal Server Error."
          }
        },
        "description": "Add question to a survey section.\n",
        "operationId": "POST_surveys-surveyid-surveysections-sectionid-questions",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "sectionQuestionMappings": {
                  "sectionQuestionMappings": [
                    {
                      "question": {
                        "questionId": "df1b45ef-560a-4893-be34-9149c2236275"
                      },
                      "required": true
                    }
                  ]
                }
              },
              "schema": {
                "$ref": "#/components/schemas/section_question"
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK – Everything is working.",
            "content": {
              "application/json": {
                "example": {
                  "questions": {
                    "pagination": {
                      "from": 0,
                      "returned": 16,
                      "total": 16,
                      "maximum": 30,
                      "sort": {}
                    },
                    "questions": [
                      {
                        "questionId": "4bd3d3e1-a70a-4e66-89d9-43fd23f5f3c8",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345,
                        "pickListGroupId": "66a0181b-26d7-4335-807e-04b73e196d86"
                      },
                      {
                        "questionId": "aeaed6cd-dbe3-4b40-951a-85d7abf410d2",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "eb0266df-8a62-47da-af35-08fca477aa97",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "97342127-06b5-4455-b757-63961a523121",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "ab7a4b52-8818-415a-b0ce-3ee29c58e226",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "62988239-88ae-41ce-be55-65fc1732ef88",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "ffb54b34-a6dc-4fc3-9631-145b705daeaf",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "2b3c1941-be73-4fc6-b99f-5dd4382804aa",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "e5d0ac93-6070-4bf0-ae0c-3e21e3c6cd54",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "6432fb8b-ad4a-47b7-8927-b18eaa91f54c",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "f58d1b36-2208-4bee-a616-649291cf148e",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "cd65e411-194a-421b-a73e-f33b7f928085",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "2b62b56e-f8ad-40b5-beb8-a554e706544e",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "50169178-a7fb-4d28-b935-cea1399e2df2",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "029bd4a9-4035-4d7c-b661-bed328e8010f",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      },
                      {
                        "questionId": "f3e7f22d-c136-4128-8d88-9de3f1be9540",
                        "questionDescription": "asvsvsav",
                        "displayText": "wefewf",
                        "questionDataType": "nhhhee",
                        "questionType": "sddvdv",
                        "correctValueForAssessment": "ergreg",
                        "copyQuestionId": true,
                        "hudQuestion": false,
                        "locked": false,
                        "questionWeight": 1345
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/questions_ids_json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "500 – Internal Server Error"
          }
        },
        "description": "Read all the question of selected survey section.\n",
        "operationId": "GET_surveys-surveyid-surveysections-sectionid-questions"
      },
      "parameters": [
        {
          "name": "sectionid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "SurveySections Identifier"
        },
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Surveys Identifier"
        }
      ]
    },
    "/surveys/{surveyid}/surveysections/{sectionid}/questions/{questionid}": {
      "delete": {
        "responses": {
          "204": {
            "description": "OK – The resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request – The request was invalid or cannot be served."
          },
          "401": {
            "description": "Unauthorized – The request requires user authentication."
          },
          "403": {
            "description": "Forbidden – The server understood the request, but is refusing it or the access is not allowed."
          },
          "404": {
            "description": "Not found – There is no resource behind the URI."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "description": "Deletes a specific question from specified by section.",
        "operationId": "DELETE_surveys-surveyid-surveysections-sectionid-questions-questionid"
      },
      "parameters": [
        {
          "name": "questionid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "sectionid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "SurveySections Identifier"
        },
        {
          "name": "surveyid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Surveys Identifier"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "pickListGroup_id_json": {
        "required": [
          "pickListGroup"
        ],
        "type": "object",
        "properties": {
          "pickListGroup": {
            "required": [
              "pickListGroupId",
              "pickListGroupName"
            ],
            "type": "object",
            "properties": {
              "pickListGroupId": {
                "type": "string"
              },
              "pickListGroupName": {
                "type": "string"
              }
            }
          }
        }
      },
      "pickListGroup_ids_json": {
        "required": [
          "pickListGroups"
        ],
        "type": "object",
        "properties": {
          "pickListGroups": {
            "required": [
              "pagination",
              "pickListGroups"
            ],
            "type": "object",
            "properties": {
              "pagination": {
                "required": [
                  "from",
                  "returned",
                  "total",
                  "maximum",
                  "sort"
                ],
                "type": "object",
                "properties": {
                  "from": {
                    "type": "integer"
                  },
                  "returned": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "maximum": {
                    "type": "integer"
                  },
                  "sort": {
                    "type": "object"
                  }
                }
              },
              "pickListGroups": {
                "type": "array",
                "items": {
                  "required": [
                    "pickListGroupId",
                    "pickListGroupName"
                  ],
                  "type": "object",
                  "properties": {
                    "pickListGroupId": {
                      "type": "string"
                    },
                    "pickListGroupName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "pickListGroup_json": {
        "required": [
          "pickListGroup"
        ],
        "type": "object",
        "properties": {
          "pickListGroup": {
            "required": [
              "pickListGroupName"
            ],
            "type": "object",
            "properties": {
              "pickListGroupName": {
                "type": "string"
              }
            }
          }
        }
      },
      "id_pickListGroup_json": {
        "required": [
          "pickListGroup"
        ],
        "type": "object",
        "properties": {
          "pickListGroup": {
            "required": [
              "pickListGroupId"
            ],
            "type": "object",
            "properties": {
              "pickListGroupId": {
                "type": "string"
              }
            }
          }
        }
      },
      "pickListValues_id_json": {
        "required": [
          "pickListValue"
        ],
        "type": "object",
        "properties": {
          "pickListValue": {
            "required": [
              "pickListValueId",
              "pickListValueCode",
              "valueText"
            ],
            "type": "object",
            "properties": {
              "pickListValueId": {
                "type": "string"
              },
              "pickListValueCode": {
                "type": "string"
              },
              "valueText": {
                "type": "string"
              }
            }
          }
        }
      },
      "pickListValues_ids_json": {
        "required": [
          "pickListValues"
        ],
        "type": "object",
        "properties": {
          "pickListValues": {
            "required": [
              "pagination",
              "pickListValues"
            ],
            "type": "object",
            "properties": {
              "pagination": {
                "required": [
                  "from",
                  "returned",
                  "total",
                  "maximum",
                  "sort"
                ],
                "type": "object",
                "properties": {
                  "from": {
                    "type": "integer"
                  },
                  "returned": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "maximum": {
                    "type": "integer"
                  },
                  "sort": {
                    "type": "object"
                  }
                }
              },
              "pickListValues": {
                "type": "array",
                "items": {
                  "required": [
                    "pickListValueId",
                    "pickListValueCode",
                    "valueText"
                  ],
                  "type": "object",
                  "properties": {
                    "pickListValueId": {
                      "type": "string"
                    },
                    "pickListValueCode": {
                      "type": "string"
                    },
                    "valueText": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "pickListValues_json": {
        "required": [
          "pickListValues"
        ],
        "type": "object",
        "properties": {
          "pickListValues": {
            "required": [
              "pickListValues"
            ],
            "type": "object",
            "properties": {
              "pickListValues": {
                "type": "array",
                "items": {
                  "required": [
                    "pickListValueCode",
                    "valueText"
                  ],
                  "type": "object",
                  "properties": {
                    "pickListValueCode": {
                      "type": "string"
                    },
                    "valueText": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "id_pickListValues_json": {
        "required": [
          "pickListValue"
        ],
        "type": "object",
        "properties": {
          "pickListValue": {
            "required": [
              "pickListValueId"
            ],
            "type": "object",
            "properties": {
              "pickListValueId": {
                "type": "string"
              }
            }
          }
        }
      },
      "questionGroups_id_json": {
        "required": [
          "questionGroup"
        ],
        "type": "object",
        "properties": {
          "questionGroup": {
            "required": [
              "questionIGroupId",
              "questionGroupName"
            ],
            "type": "object",
            "properties": {
              "questionIGroupId": {
                "type": "string"
              },
              "questionGroupName": {
                "type": "string"
              }
            }
          }
        }
      },
      "questionGroup_ids_json": {
        "required": [
          "questionGroups"
        ],
        "type": "object",
        "properties": {
          "questionGroups": {
            "required": [
              "pagination",
              "questionGroups"
            ],
            "type": "object",
            "properties": {
              "pagination": {
                "required": [
                  "from",
                  "returned",
                  "total",
                  "maximum",
                  "sort"
                ],
                "type": "object",
                "properties": {
                  "from": {
                    "type": "integer"
                  },
                  "returned": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "maximum": {
                    "type": "integer"
                  },
                  "sort": {
                    "type": "object"
                  }
                }
              },
              "questionGroups": {
                "type": "array",
                "items": {
                  "required": [
                    "questionIGroupId",
                    "questionGroupName"
                  ],
                  "type": "object",
                  "properties": {
                    "questionIGroupId": {
                      "type": "string"
                    },
                    "questionGroupName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "questionGroups_json": {
        "required": [
          "questionGroup"
        ],
        "type": "object",
        "properties": {
          "questionGroup": {
            "required": [
              "questionGroupName"
            ],
            "type": "object",
            "properties": {
              "questionGroupName": {
                "type": "string"
              }
            }
          }
        }
      },
      "id_questionGroups_json": {
        "required": [
          "questionGroup"
        ],
        "type": "object",
        "properties": {
          "questionGroup": {
            "required": [
              "questionIGroupId"
            ],
            "type": "object",
            "properties": {
              "questionIGroupId": {
                "type": "string"
              }
            }
          }
        }
      },
      "questions_id_json": {
        "required": [
          "question"
        ],
        "type": "object",
        "properties": {
          "question": {
            "required": [
              "questionId",
              "questionDescription",
              "displayText",
              "questionDataType",
              "questionType",
              "correctValueForAssessment",
              "copyQuestionId",
              "hudQuestion",
              "locked",
              "questionWeight"
            ],
            "type": "object",
            "properties": {
              "questionId": {
                "type": "string"
              },
              "questionDescription": {
                "type": "string"
              },
              "displayText": {
                "type": "string"
              },
              "questionDataType": {
                "type": "string"
              },
              "questionType": {
                "type": "string"
              },
              "correctValueForAssessment": {
                "type": "string"
              },
              "copyQuestionId": {
                "type": "boolean"
              },
              "hudQuestion": {
                "type": "boolean"
              },
              "locked": {
                "type": "boolean"
              },
              "questionWeight": {
                "type": "integer"
              },
              "pickListGroupId": {
                "type": "string"
              }
            }
          }
        }
      },
      "questions_ids_json": {
        "required": [
          "questions"
        ],
        "type": "object",
        "properties": {
          "questions": {
            "required": [
              "pagination",
              "questions"
            ],
            "type": "object",
            "properties": {
              "pagination": {
                "required": [
                  "from",
                  "returned",
                  "total",
                  "maximum",
                  "sort"
                ],
                "type": "object",
                "properties": {
                  "from": {
                    "type": "integer"
                  },
                  "returned": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "maximum": {
                    "type": "integer"
                  },
                  "sort": {
                    "type": "object"
                  }
                }
              },
              "questions": {
                "type": "array",
                "items": {
                  "required": [
                    "questionId",
                    "questionDescription",
                    "displayText",
                    "questionDataType",
                    "questionType",
                    "correctValueForAssessment",
                    "copyQuestionId",
                    "hudQuestion",
                    "locked",
                    "questionWeight"
                  ],
                  "type": "object",
                  "properties": {
                    "questionId": {
                      "type": "string"
                    },
                    "questionDescription": {
                      "type": "string"
                    },
                    "displayText": {
                      "type": "string"
                    },
                    "questionDataType": {
                      "type": "string"
                    },
                    "questionType": {
                      "type": "string"
                    },
                    "correctValueForAssessment": {
                      "type": "string"
                    },
                    "copyQuestionId": {
                      "type": "boolean"
                    },
                    "hudQuestion": {
                      "type": "boolean"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "questionWeight": {
                      "type": "integer"
                    },
                    "pickListGroupId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "questions_json": {
        "required": [
          "question"
        ],
        "type": "object",
        "properties": {
          "question": {
            "required": [
              "questionDescription",
              "displayText",
              "questionDataType",
              "questionType",
              "correctValueForAssessment",
              "copyQuestionId",
              "hudQuestion",
              "locked",
              "questionWeight"
            ],
            "type": "object",
            "properties": {
              "questionDescription": {
                "type": "string"
              },
              "displayText": {
                "type": "string"
              },
              "questionDataType": {
                "type": "string"
              },
              "questionType": {
                "type": "string"
              },
              "correctValueForAssessment": {
                "type": "string"
              },
              "copyQuestionId": {
                "type": "boolean"
              },
              "hudQuestion": {
                "type": "boolean"
              },
              "locked": {
                "type": "boolean"
              },
              "questionWeight": {
                "type": "integer"
              },
              "pickListGroupId": {
                "type": "string"
              }
            }
          }
        }
      },
      "surveySections_json": {
        "required": [
          "surveySection"
        ],
        "type": "object",
        "properties": {
          "surveySection": {
            "required": [
              "sectionText",
              "sectionDetail",
              "sectionWeight",
              "order"
            ],
            "type": "object",
            "properties": {
              "sectionText": {
                "type": "string"
              },
              "sectionDetail": {
                "type": "string"
              },
              "sectionWeight": {
                "type": "integer"
              },
              "order": {
                "type": "integer"
              }
            }
          }
        }
      },
      "id_questions_json": {
        "required": [
          "question"
        ],
        "type": "object",
        "properties": {
          "question": {
            "required": [
              "questionId",
              "copyQuestionId",
              "hudQuestion",
              "locked",
              "questionWeight"
            ],
            "type": "object",
            "properties": {
              "questionId": {
                "type": "string"
              },
              "copyQuestionId": {
                "type": "boolean"
              },
              "hudQuestion": {
                "type": "boolean"
              },
              "locked": {
                "type": "boolean"
              },
              "questionWeight": {
                "type": "integer"
              }
            }
          }
        }
      },
      "response_id_json": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "response": {
            "required": [
              "responseId",
              "responseText",
              "questionScore"
            ],
            "type": "object",
            "properties": {
              "responseId": {
                "type": "string"
              },
              "responseText": {
                "type": "string"
              },
              "questionScore": {
                "type": "integer"
              },
              "effectiveDate": {
                "type": "string"
              }
            }
          }
        }
      },
      "response_ids_json": {
        "required": [
          "responses"
        ],
        "type": "object",
        "properties": {
          "responses": {
            "required": [
              "pagination",
              "responses"
            ],
            "type": "object",
            "properties": {
              "pagination": {
                "required": [
                  "from",
                  "returned",
                  "total",
                  "maximum",
                  "sort"
                ],
                "type": "object",
                "properties": {
                  "from": {
                    "type": "integer"
                  },
                  "returned": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "maximum": {
                    "type": "integer"
                  },
                  "sort": {
                    "type": "object"
                  }
                }
              },
              "responses": {
                "type": "array",
                "items": {
                  "required": [
                    "responseId",
                    "responseText",
                    "questionScore"
                  ],
                  "type": "object",
                  "properties": {
                    "responseId": {
                      "type": "string"
                    },
                    "responseText": {
                      "type": "string"
                    },
                    "questionScore": {
                      "type": "integer"
                    },
                    "effectiveDate": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "response_json": {
        "required": [
          "responses"
        ],
        "type": "object",
        "properties": {
          "responses": {
            "required": [
              "responses"
            ],
            "type": "object",
            "properties": {
              "responses": {
                "type": "array",
                "items": {
                  "required": [
                    "questionId",
                    "responseText"
                  ],
                  "type": "object",
                  "properties": {
                    "questionId": {
                      "type": "string"
                    },
                    "responseText": {
                      "type": "string"
                    },
                    "appId": {
                      "type": "string"
                    },
                    "sectionId": {
                      "type": "string"
                    },
                    "effectiveDate": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "id_response_json": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "response": {
            "required": [
              "responseId",
              "questionScore"
            ],
            "type": "object",
            "properties": {
              "responseId": {
                "type": "string"
              },
              "questionScore": {
                "type": "integer"
              }
            }
          }
        }
      },
      "surveys_id_json": {
        "required": [
          "survey"
        ],
        "type": "object",
        "properties": {
          "survey": {
            "required": [
              "surveyId",
              "surveyTitle",
              "surveyOwner",
              "tagValue",
              "locked",
              "copySurveyId"
            ],
            "type": "object",
            "properties": {
              "surveyId": {
                "type": "string"
              },
              "surveyTitle": {
                "type": "string"
              },
              "surveyOwner": {
                "type": "string"
              },
              "tagValue": {
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "copySurveyId": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "surveys_ids_json": {
        "required": [
          "survies"
        ],
        "type": "object",
        "properties": {
          "survies": {
            "required": [
              "pagination",
              "survies"
            ],
            "type": "object",
            "properties": {
              "pagination": {
                "required": [
                  "from",
                  "returned",
                  "total",
                  "maximum",
                  "sort"
                ],
                "type": "object",
                "properties": {
                  "from": {
                    "type": "integer"
                  },
                  "returned": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "maximum": {
                    "type": "integer"
                  },
                  "sort": {
                    "type": "object"
                  }
                }
              },
              "survies": {
                "type": "array",
                "items": {
                  "required": [
                    "surveyId",
                    "surveyTitle",
                    "surveyOwner",
                    "tagValue",
                    "locked",
                    "copySurveyId"
                  ],
                  "type": "object",
                  "properties": {
                    "surveyId": {
                      "type": "string"
                    },
                    "surveyTitle": {
                      "type": "string"
                    },
                    "surveyOwner": {
                      "type": "string"
                    },
                    "tagValue": {
                      "type": "string"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "copySurveyId": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "surveys_json": {
        "required": [
          "survey"
        ],
        "type": "object",
        "properties": {
          "survey": {
            "required": [
              "surveyTitle",
              "surveyOwner",
              "tagValue",
              "locked",
              "copySurveyId"
            ],
            "type": "object",
            "properties": {
              "surveyTitle": {
                "type": "string"
              },
              "surveyOwner": {
                "type": "string"
              },
              "tagValue": {
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "copySurveyId": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "id_surveys_json": {
        "required": [
          "survey"
        ],
        "type": "object",
        "properties": {
          "survey": {
            "required": [
              "surveyId",
              "locked",
              "copySurveyId"
            ],
            "type": "object",
            "properties": {
              "surveyId": {
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "copySurveyId": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "surveySections_id_json": {
        "required": [
          "surveySection"
        ],
        "type": "object",
        "properties": {
          "surveySection": {
            "required": [
              "surveySectionId",
              "sectionText",
              "sectionDetail",
              "sectionWeight",
              "order"
            ],
            "type": "object",
            "properties": {
              "surveySectionId": {
                "type": "string"
              },
              "sectionText": {
                "type": "string"
              },
              "sectionDetail": {
                "type": "string"
              },
              "sectionWeight": {
                "type": "integer"
              },
              "order": {
                "type": "integer"
              }
            }
          }
        }
      },
      "surveySection_ids_json": {
        "required": [
          "surveySections"
        ],
        "type": "object",
        "properties": {
          "surveySections": {
            "required": [
              "pagination",
              "surveySections"
            ],
            "type": "object",
            "properties": {
              "pagination": {
                "required": [
                  "from",
                  "returned",
                  "total",
                  "maximum",
                  "sort"
                ],
                "type": "object",
                "properties": {
                  "from": {
                    "type": "integer"
                  },
                  "returned": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "maximum": {
                    "type": "integer"
                  },
                  "sort": {
                    "type": "object"
                  }
                }
              },
              "surveySections": {
                "type": "array",
                "items": {
                  "required": [
                    "surveySectionId",
                    "sectionText",
                    "sectionDetail",
                    "sectionWeight",
                    "order"
                  ],
                  "type": "object",
                  "properties": {
                    "surveySectionId": {
                      "type": "string"
                    },
                    "sectionText": {
                      "type": "string"
                    },
                    "sectionDetail": {
                      "type": "string"
                    },
                    "sectionWeight": {
                      "type": "integer"
                    },
                    "order": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "id_surveySection_json": {
        "required": [
          "surveySection"
        ],
        "type": "object",
        "properties": {
          "surveySection": {
            "required": [
              "surveySectionId",
              "sectionWeight",
              "order"
            ],
            "type": "object",
            "properties": {
              "surveySectionId": {
                "type": "string"
              },
              "sectionWeight": {
                "type": "integer"
              },
              "order": {
                "type": "integer"
              }
            }
          }
        }
      },
      "score_ids_json": {
        "required": [
          "sectionScores"
        ],
        "type": "object",
        "properties": {
          "sectionScores": {
            "required": [
              "pagination",
              "sectionScores"
            ],
            "type": "object",
            "properties": {
              "pagination": {
                "required": [
                  "from",
                  "returned",
                  "total",
                  "maximum",
                  "sort"
                ],
                "type": "object",
                "properties": {
                  "from": {
                    "type": "integer"
                  },
                  "returned": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "maximum": {
                    "type": "integer"
                  },
                  "sort": {
                    "type": "object"
                  }
                }
              },
              "sectionScores": {
                "type": "array",
                "items": {
                  "required": [
                    "sectionScoreId",
                    "sectionId",
                    "surveyId",
                    "clientId",
                    "sectionScore"
                  ],
                  "type": "object",
                  "properties": {
                    "sectionScoreId": {
                      "type": "string"
                    },
                    "sectionId": {
                      "type": "string"
                    },
                    "surveyId": {
                      "type": "string"
                    },
                    "clientId": {
                      "type": "string"
                    },
                    "sectionScore": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "section_question": {
        "required": [
          "sectionQuestionMappings"
        ],
        "type": "object",
        "properties": {
          "sectionQuestionMappings": {
            "required": [
              "sectionQuestionMappings"
            ],
            "type": "object",
            "properties": {
              "sectionQuestionMappings": {
                "type": "array",
                "items": {
                  "required": [
                    "question",
                    "required"
                  ],
                  "type": "object",
                  "properties": {
                    "question": {
                      "required": [
                        "questionId"
                      ],
                      "type": "object",
                      "properties": {
                        "questionId": {
                          "type": "string"
                        }
                      }
                    },
                    "required": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "section_score": {
        "required": [
          "sectionScore"
        ],
        "type": "object",
        "properties": {
          "sectionScore": {
            "required": [
              "sectionScoreId",
              "sectionId",
              "surveyId",
              "clientId",
              "sectionScore"
            ],
            "type": "object",
            "properties": {
              "sectionScoreId": {
                "type": "string"
              },
              "sectionId": {
                "type": "string"
              },
              "surveyId": {
                "type": "string"
              },
              "clientId": {
                "type": "string"
              },
              "sectionScore": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "oauth_2_0": {
        "description": "The HMIS API supports OAuth 2.0 for authenticating all API requests.\n",
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "https://hmislynk.com/hmis-authorization-service/rest/token",
            "scopes": {
              "user": "",
              "administrator": ""
            }
          }
        }
      }
    },
    "links": {},
    "callbacks": {}
  }
}
